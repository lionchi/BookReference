// GENERATED BY S3LM4
package ru.gavrilov.core.mappers;


public final class AuthorMapperSelmaGeneratedClass
    implements AuthorMapper {

  @Override
  public final ru.gavrilov.core.authors.dto.AuthorDTO asAuthorDTO(ru.gavrilov.core.authors.model.Author inAuthor) {
    ru.gavrilov.core.authors.dto.AuthorDTO out = null;
    if (inAuthor != null) {
      out = new ru.gavrilov.core.authors.dto.AuthorDTO();
      out.setFullName(inAuthor.getFullName());
      out.setId(inAuthor.getId());
    }
    return out;
  }


  @Override
  public final ru.gavrilov.core.authors.model.Author asAuthor(ru.gavrilov.core.authors.dto.AuthorDTO inAuthorDTO) {
    ru.gavrilov.core.authors.model.Author out = null;
    if (inAuthorDTO != null) {
      out = new ru.gavrilov.core.authors.model.Author();
      out.setFullName(inAuthorDTO.getFullName());
      out.setId(inAuthorDTO.getId());
    }
    return out;
  }



  /**
   * This field is used for custom Mapping
   */
  private AuthorCustomMapper customMapperAuthorCustomMapper;

  /**
   * Custom Mapper setter for customMapperAuthorCustomMapper
   */
  public final void setCustomMapperAuthorCustomMapper(AuthorCustomMapper mapper) {
    this.customMapperAuthorCustomMapper = mapper;
  }


  /**
   * Single constructor
   */
  public AuthorMapperSelmaGeneratedClass() {
    this.customMapperAuthorCustomMapper = new ru.gavrilov.core.mappers.AuthorCustomMapper();
  }

}
