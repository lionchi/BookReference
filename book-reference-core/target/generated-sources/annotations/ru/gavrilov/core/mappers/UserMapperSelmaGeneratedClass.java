// GENERATED BY S3LM4
package ru.gavrilov.core.mappers;


public final class UserMapperSelmaGeneratedClass
    implements UserMapper {

  @Override
  public final ru.gavrilov.core.users.dto.UserDTO asUserDTO(ru.gavrilov.core.users.model.User inUser) {
    ru.gavrilov.core.users.dto.UserDTO out = null;
    if (inUser != null) {
      out = new ru.gavrilov.core.users.dto.UserDTO();
      if (inUser.getDateOfRegistration() != null) {
        out.setDateOfRegistration(new java.util.Date(inUser.getDateOfRegistration().getTime()));
      }
      else {
        out.setDateOfRegistration(null);
      }
      out.setEmail(inUser.getEmail());
      out.setFullName(inUser.getFullName());
      out.setId(inUser.getId());
      out.setLogin(inUser.getLogin());
      out.setPassword(inUser.getPassword());
      out.setSex(inUser.getSex());
    }
    return out;
  }


  @Override
  public final ru.gavrilov.core.users.model.User asUser(ru.gavrilov.core.users.dto.UserDTO inUserDTO) {
    ru.gavrilov.core.users.model.User out = null;
    if (inUserDTO != null) {
      out = new ru.gavrilov.core.users.model.User();
      if (inUserDTO.getDateOfRegistration() != null) {
        out.setDateOfRegistration(new java.util.Date(inUserDTO.getDateOfRegistration().getTime()));
      }
      else {
        out.setDateOfRegistration(null);
      }
      out.setEmail(inUserDTO.getEmail());
      out.setFullName(inUserDTO.getFullName());
      out.setId(inUserDTO.getId());
      out.setLogin(inUserDTO.getLogin());
      out.setPassword(inUserDTO.getPassword());
      out.setSex(inUserDTO.getSex());
    }
    return out;
  }



  /**
   * This field is used for custom Mapping
   */
  private UserCustomMapper customMapperUserCustomMapper;

  /**
   * Custom Mapper setter for customMapperUserCustomMapper
   */
  public final void setCustomMapperUserCustomMapper(UserCustomMapper mapper) {
    this.customMapperUserCustomMapper = mapper;
  }


  /**
   * Single constructor
   */
  public UserMapperSelmaGeneratedClass() {
    this.customMapperUserCustomMapper = new ru.gavrilov.core.mappers.UserCustomMapper();
  }

}
